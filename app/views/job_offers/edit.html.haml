= content_for :title, @job_offer.title.blank? ? 'New Offer' : @job_offer.title

= content_for :body_class, " offer-client"

- if @job_offer.waiting_for_payment? || @job_offer.waiting_for_submission?
  = render 'job_offers/client/wizard', active: :offer, offer: @job_offer, signup: params[:signup]
- else
  = render '/job_offers/breadcrumb'
  = content_for :subnav do
    = render current_user.try(:is_a?, Designer) ? 'job_offers/designer/nav' : 'job_offers/client/nav', job_offer: @job_offer

= content_for :error_messages do
  = error_messages(@job_offer)

- if @job_offer.rejected? && !@job_offer.review_comment.blank?
  = render '/job_offers/client/review_comment', job_offer: @job_offer

- if current_user.is_a?(Admin) && @job_offer.waiting_for_review?
  = render '/admin/job_offers/workflow'

- if current_user.is_a?(Admin) && @job_offer.is_a?(Html::JobOffer)
  = content_for :sidebar do
    = link_to 'Convert to Markdown', to_markdown_admin_offer_path(@job_offer), class: 'button big-button', method: 'put'


- if @job_offer.waiting_for_submission?
  %p.page-intro
    Write your job offer, then submit it for review once you're ready.

= simple_form_for @job_offer, url: offer_path(@job_offer.id) do |f|

  = render 'form', f: f, job_offer: @job_offer, client: @client

:coffeescript
  head ->
    $ ->
      lastFormState = $('form').serialize()
      setInterval(->
        if $('form').serialize() != lastFormState
          lastFormState = $('form').serialize()
          $.ajax
            url:        "#{offer_path(@job_offer.id)}"
            type:       'POST'
            data:       "\#{lastFormState}&workflow_save=1"
            success: ->
              now = new Date()
              $('.autosave-notice').hide().html("Autosaved at \#{now.getHours()}:\#{now.getMinutes()}").fadeIn()
      60000)
